Определение изменений коммуникационных свойств параллельных программ при помощи анализа трафика InfiniBand

На сегодняшний день суперкомпьютерные системы базируются на огромном количестве узлов и современной многопроцессорной архитектуре. Быстродействие приложений в таких системах обеспечивается с помощью высокоскоростных коммутируемых сетей, одной из которых является есть InfiniBand.
С развитием вычислительных систем и запускаемых на них приложений их взаимодействие становится все более сложным, что, в свою очередь, ведет к необходимости разработки различных средств анализа и визуализации работы параллельных приложений. Такие средства могут оказать помощь в увеличении производительности запускаемых приложений.
Так, например, возможность анализировать изменение интенсивности пересылок между отдельно взятыми процессами параллельного приложения может позволить более эффективно размещать процессы на вычислительных узлах для уменьшения времени пересылок сообщений.
В данной работе были поставлены задачи по разработке подхода анализа и нахождения изменений поведения программ, использующих операции MPI, на основе их трафика в сети InfiniBand, а также по разработке метода визуализации различных коммуникационных свойств параллельных приложений.
Для анализа работы приложений производились сбор трасс на суперкомпьютере «Ломоносов»  с помощью ранее разработанного подхода . Из трасс извлекалась информация о рангах отправителя и получателя пакетов, типе пакетов, их длин и времени отправки, эта информация анализировалась для составления коммуникационных матриц приложения. При этом благодаря временным меткам появилась возможность составлять матрицы для отдельных отрезков работы приложения.
 
Визуализация производилась с помощью веб-сервера на основе библиотеки python dash , это дает возможность задавать параметры для анализа программ с помощью веб-интерфейса в браузере.
Приложение анализировалось на основе его коммуникационных матриц, для чего время работы приложения разбивалось на отрезки фиксированной длины, для каждого из которых составлялась матрица. Далее строился график норм разниц соседних по временным отрезкам матриц; использовались нормы, вычисление которых предоставляется библиотекой numpy.linalg . На получаемых графиках наблюдались различные изменения нормы, ассоциируемые с изменениями поведения программы, для их отслеживания был разработан подход, позволяющий находить изменения в автоматическом режиме.
Подход тестировался на различных программах, в том числе на тестах NPB . С помощью разработанного подхода можно было выделить использование коллективных операций MPI и использование пересылок point-to-point, также можно было выделить периоды служебной пересылки небольших пакетов либо же, напротив, периоды интенсивной пересылки больших объемов данных. Помимо этого, точки изменения поведения программ, определяемые автоматически, были сопоставлены с различными точками в исходном коде исследуемых программ, соответствующими вызовам MPI операций. Например, для одного из тестов NPB были выявлены точки, соответствующие использованию коллективных операций в начале и в конце работы программы, а также вызовам операций point-to-point в середине.
