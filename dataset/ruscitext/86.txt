ПАРАЛЛЕЛЬНЫЙ АЛГОРИТМ ПОИСКА СТРУКТУРНЫХ ИЗМЕНЕНИЙ ВО ВРЕМЕННЫХ РЯДАХ

1. Введение.
Под структурным изменением понимается изменение параметров модели временного ряда. Поиск точек, где происходят такие изменения, – важная задача во многих областях науки и техники. Так, например, проблема позиционирования (place recognition) в компьютерном зрении может быть решена с помощью детектирования структурных изменений во входящем видеопотоке[1]. В работе [2] по точкам сдвига среднего изучается взаимосвязь между биржевыми индексами США, Японии и Европы. В генетике большой интерес вызывает поиск изменений композиционной структуры генома [3].
В данной работе рассматривается особый вид структурных изменений – сдвиг среднего, т.е. изменение математического ожидания при неизменной дисперсии.
На данной момент хорошо развита теория поиска одной точки сдвига временного ряда. Начало было положено Шухартом в статье 1925го года [4]. Большой вклад внесли Пейдж[5], Ширяев[6], Робертс[7], Никифоров [8] и другие исследователи. Были разработаны методы, основанные на контрольных картах (CUSUM, EWMA, карты Шухарта), информационных критериях, байесовском подходе, максимальном правдоподобии.
Решению задачи поиска всех точек сдвига посвящено значительно меньше работ. Здесь наиболее широко используемым является, по всей видимости, метод бинарной сегментации (binary segmentation) [9]. Конкуренцию ему составляют методы, использующие динамическое программирование (метод PELT[10], оптимального разбиения [11] и др.).
Задачи обработки больших данных (big data), возникающие в таких областях как генетика, финансы, дают новый импульс для поиска новых методов детектирования сдвига среднего. Обработку временных рядов большой длины невозможно проводить без использования многопроцессорных ЭВМ (суперкомпьютеров), что приводит к возникновению нового требования к соответствующим алгоритмам - они должны обладать высокой степенью параллелизма.
В данной работе предложен новый параллельный алгоритм поиска точек сдвига среднего временного ряда. Основной его идеей является разбиение временного ряда на сегменты одинаковой длины. Поиск точки сдвига на каждом сегменте проводится независимо в соответствии с моделью данных, описанной в пункте 2. В пункте 3 приводится статистика с помощью которой производится проверка статистической гипотезы о наличии точки сдвига. Плохая детектируемость точек у границ сегмента приводит к необходимости исследования окрестностей границ между сегментами сегментов (см. п. 4). Параллельная реализация алгоритма для машин с общей памятью описана в пункте 5. 
2. Модель точки сдвига среднего.
Пусть дан временной ряд { xi }i=1 . Пусть элемент выборки xi (1 ≤ i ≤ n ) - реализация сл. вел. X i . Предположим, что все X i распределены нормально с одинаковой дисперсией sig 2 . Требуется проверить гипотезу H 0 : E ( X 1 ) = E ( X 2 ) = ... = E ( X n ) . Отвержение этой гипотезы будет означать, что существует такое k (1 < k < n ), что выполнены условия. Здесь k - момент сдвига среднего, оценку которого требуется найти, если H 0 отвергнута. 
3. Поиск одной точки сдвига среднего.
Наш метод поиска сдвигов среднего основан на разбиении временного ряда на сегменты одинаковой длины и поиска одного сдвига на каждом из сегментов. Ниже описывается процедура поиска точки сдвига на сегменте определенной длины n. 
3.1 Тест для проверки гипотезы о наличии точки сдвига.
Для проверки гипотезы (см. п.2) будем использовать стандартную tстатистику, применяемую для проверки равенства средних двух выборок различного размера с одинаковой дисперсией. Здесь мы следуем [12]. Для каждого возможного положения точки сдвига k (1 < k < n ) вычислим следующим величинам: средние до и после сдвига, сумма квадратов отклонений, выборочная оценка дисперсии. Используется стандартная t-статистика двухвыборочного критерия Стьюдента для выборок. Сам по себе критерий Стьюдента используется в том случае, когда сравниваемые выборки уже сформированы: известно, какие наблюдения входят в каждую из них, неизвестно лишь, совпадают ли в выборках математические ожидания. Мы, однако, не знаем точку сдвига, разделяющую куски ряда с различными математическими ожиданиями, и подбираем её так, чтобы статистика Стьюдента была наибольшей, что свидетельствовало бы о статистически наиболее достоверном различии. Получаем статистику для проверки H 0 (впервые предложена в [13] ). Критические значения для этой статистики были рассчитаны с помощью симуляций. Для заданной длины выборки n и значения ошибки первого рода alpha генерировались 100 тысяч выборок из независимых случайных величин, имеющих стандартное нормальное распределение. Выбор параметров распределения здесь не имеет значения, так как распределение t-статистики зависит лишь от суммарного числа наблюдений в двух выборках (в рассматриваемом случае это длина ряда, в котором ищется сдвиг). Для каждой сгенерированной выборки рассчитывались критические значения Tmax,n ,alpha . В качестве оценки для значения Tmax,n ,alpha использовались выборочные квантили этой статистики порядка 1 − alpha . Таким образом, если пренебречь погрешностью вычислений, можно утверждать, что при отсутствии сдвига величина Tmax,n превышает критическое значение Tmax,n ,alpha с вероятностью alpha , которую исследователь может выбирать по собственному желанию.
Рассчитанные критические значения статистики Tmax,n для отдельных уровней значимости alpha и объёмов выборки n приведены в таблице 1.
Было замечено, что описанный тест не очень хорошо детектирует точки сдвига, лежащие близко к краям ряда. Также очевидно, что сдвиг тем труднее обнаружить, чем меньше величина, на которую меняется среднее. В связи с этим было проведено исследование частоты обнаружения точки сдвига в зависимости от её положения и величины сдвига.
Для различных комбинаций положения сдвига j и его величины генерировались случайные ряды длиной в 50 и 100 наблюдений, к которым применялся описанный выше тест. Как это часто делается при исследовании контрольных карт, величина сдвига задавалась в долях стандартного отклонения sig . Частота обнаружения сдвига при разных величинах уровня значимости alpha , подсчитанная на основании 10000 симуляций, отражена на рис. 1.
Приведенные данные показывают, что обнаружение точки сдвига вблизи начала ряда более трудно. Как видно из рис. 1, увеличение числа наблюдений не спасает положение — оценки мощности критерия для точки сдвига j=4 практически одинаковы для рядов в 50 и 100 наблюдений. Приведённые в приложении цифры говорят даже о небольшом снижении мощности при росте числа точек — впрочем, это может быть результатом погрешности вычислений. Если же сдвиг расположен в середине ряда или хотя бы удалён от края, вероятность обнаружения растёт с длиной ряда. Так, например, частота детектирования сдвига величиной 1 sig в середине ряда длиной 50 при alpha = 0.05 равна 0,78, а в середине ряда длиной 100 (при тех же параметрах) - 0,982. 
3.2 Уменьшение количества ложных детектирований
Решение проблема ошибочных обнаружений сдвигов весьма актуально при работе с большими временными рядами. Здесь уместно привести следующий пример. Допустим, у нас есть ряд без сдвигов длиной N = 106 . Разобьем его на сегменты длины n = 100 , таких сегментов будет s = 104 . Вероятность ошибки второго рода возьмем alpha = 0,005 . Тогда количество ложно детектированных точек сдвига может достигать s ⋅ alpha = 50 . Это число может быть еще больше из-за проверки пограничных областей между сегментами без сдвигов. Таким образом, представляется целесообразным верифицировать найденные с помощью статистики точки, используя дополнительную процедуру проверки.
В данной работе в качестве такой дополнительной проверки используется метод, основанный на идее информационного критерия (см. [14], [15]). Введем функцию стоимости (cost function) временного ряда { xi }i=1 . Точку τ будем считать точкой сдвига. В соответствии с информационным критерием Шварца[16] возьмем beta = ln(n) . Следуя принятой в литературе практике в качестве функции стоимости будем использовать функцию максимального правдоподобия.
Вычислительные эксперименты показывают, что если каждую точку, найденную статистикой проверять по описанной формуле, то количество ложных детектированний можно снизить в среднем на 35% 
4. Поиск точек сдвига среднего временного ряда.
Предположим, что расстояние между точками сдвига не менее n и что временной ряд имеет длину N = sn . Пусть для ряда длины n вычислено граничное значение статистики Tmax,n (п. 3.1). Разобьем ряд на сегменты длиной n. Для k -го (1 ≤ k ≤ s ) сегмента с помощью описанного теста определим наличие (и при необходимости – местоположение) внутри данного сегмента точки сдвига. В случае обнаружения точки сдвига проверим ее с помощью подхода, описанного в 3.2.
Как уже говорилось, тест из п.3.1 не очень хорошо обнаруживает точки сдвига вблизи концов отрезка. Поэтому производится дополнительная проверка областей вокруг точек, разделяющих сегменты. Допустим, что для ряда длины l ( l < n ) тоже вычислено предельное значение статистики Tmax,n . Тогда, если на k м и k + 1 м отрезке статистика не обнаружила точек сдвига – применим ее к отрезку ряда {xi i = nk − l + 1..nk + l} . Эта дополнительная проверка эффективно находит точки сдвиги вблизи концов сегментов.
Данный метод позволяет найти не более 2 s − 1 точек сдвига. Поэтому он является приближенным методом решения проблема поиска точек сдвига, как и широко используемый метод бинарной сегментации. 
5. Параллельный алгоритм.
Благодаря разбиению ряда на сегменты равной длины, параллелизация описанного алгоритма представляет собой намного более простую задачу, чем распараллеливание популярного метода бинарной сегментации и методов, использующих динамическое программирование.
Очевидно, что каждому вычислительному узлу необходимо выдать порцию сегментов ряда. Напомним, что в случае если на двух сегментах не найдено точек сдвига, производится проверка окрестности границы между этими сегментами. Для обеспечения полной независимости обработки всех таких "пограничных областей" предлагается сделать детектор двухпроходным. На первом проходе производится параллельный поиск сдвигов на сегментах (включая дополнительную проверку с помощью критерия Шварца, см п.3.2).Каждый вычислительный узел обрабатывает свою порцию сегментов. На втором проходе каждый вычислительный узел обрабатывает свою порцию граничных точек(точек, разделяющих сегменты). Если оказывается, что на сегментах слева и справа от данной граничной точки не найдено точек сдвига, то производится проверка пограничной области, как это описано в п.4.
Ниже приводится запись описанного параллельного алгоритма (в варианте для машины с общей памяти) в псевдокоде. 
parallel for i = 1:n_of_segments
1) с помощью статистики проверить на i-м сегменте гипотезу H 0 ;
2) в случае отклонения гипотезы проверить наличие точки сдвига с помощью критерия Шварца;
3)при наличии точки сдвига found_chp[i] = 1, иначе found_chp[i] = 0; 
parallel for i = 1:n_of_int_bnd
если found_chp[i] = found_chp[i+1] = 0
проверить область вокруг i-й граничной точки 
Здесь n_of_segments - число сегментов, n_of_int_bnd = n_of_segments - 1 - число внутренних граничных точек.
Параллельная реализация алгоритма была написана на языке С с использованием технологии OpenMP. Вычисления проводились на мультипроцессорном сервере с общей памятью IBM eServer p690 Regatta (16 процессоров POWER4 с частотой 1.3 ГГц, 64 Гб ОЗУ, пиковая производительность 83.2 Gflops), входящем в суперкомпьютерный комплекс МГУ.
Масштабируемость алгоритма проиллюстрируем следующим примером. Был сгенерирован временной ряд с тремя точками сдвига. Время работы нашего детектора на различном числе вычислительных узлов приведено в табл.4. Видно, что ускорение близко к линейному. Отметим, что во всех экспериментов все три точки сдвига были найдены.

В статье рассматривается проблема поиска структурных изменений во временных рядах, а именно - сдвиг среднего. Описываются основные области применения методов нахождения этих изменений, проводится обзор существующих методов поиска точек сдвига. Предлагается новый параллельный алгоритм поиска точек сдвига среднего временного ряда. Описание модели сводится к поиску одной точки сдвига среднего, которая разбивается на проверку гипотезы о наличии точки сдвига и уменьшение количества ложных детектирований. Результаты вычислительных экспериментов показывают среднее снижение ложных срабатываний на 35%. Далее описывается алгоритм, заключающийся в разбиении временного ряда на сегменты и поиск точек сдвига внутри каждого из них. Представлена параллельная реализации алгоритма на псевдокоде. Результаты экспериментов демонстрируют его эффективность и масштабируемость алгоритма.