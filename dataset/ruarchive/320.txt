алгоритм Свендсена - Вана (sw) и связанные с ним кластерные методы @xcite значительно повысили эффективность моделирования критической области различных спиновых моделей. оригинальный алгоритм sw может быть модифицирован для работы со спиновыми системами с полями, нарушающими внутреннюю симметрию @xcite. спиновые модели такого рода включают антиферромагнетик Изинга в однородном поле, модель Изинга в случайном поле и решетчатые газовые модели адсорбции в пористых средах @xcite. модификация, предложенная в ссылке. заключается в назначении весов Больцмана в зависимости от сетевого поля, действующего на кластер, чтобы решить, следует ли перевернуть кластер. к сожалению, модифицированный алгоритм sw неэффективен. проблема в том, что на большие кластеры спинов обычно действует большое сетевое поле, и эти поля препятствуют их переворачиванию. алгоритм для систем с полями, который позволяет избежать этой проблемы, был представлен Реднером, Мачтой и Чейсом @xcite. в этом кластерном алгоритме с двумя репликами большие кластеры создаются из двух реплик одной и той же системы и не имеют сетевого поля, действующего на них, так что они могут свободно переворачиваться. кластерный алгоритм с двумя репликами был применен для изучения фазового перехода бензола, адсорбированного в цеолитах @xcite, и является более эффективным, чем обычный алгоритм metropolis, для определения местоположения и моделирования критической точки и линии сосуществования фаз. в сочетании с методом обмена репликами Свендсена и Ванга @xcite метод двух реплик был применен к модели изинга случайного поля @xcite. метод двух реплик тесно связан с геометрическим кластерным методом монте-Карло @xcite.    в этой статье мы сообщаем о подробном исследовании динамики алгоритма кластера с двумя репликами (trc) применительно к двумерному ферромагнетику Изинга в шахматном поле (эквивалентно антиферромагнетику изинга в однородном поле). алгоритм, представленный в ссылке. имеет два компонента, которые не требуются для детального баланса и эргодичности. мы изучили вклад в производительность алгоритма этих необязательных компонентов. мы обнаружили, что полный алгоритм имеет очень маленький динамический показатель @xmath0. однако мы также обнаруживаем, что для этого небольшого значения @xmath1 требуется один из необязательных компонентов и что этот компонент зависит от особой симметрии модели ising в шахматном порядке. это наблюдение приводит к вопросу о том, существуют ли кластерные методы для эффективного моделирования более общих моделей изинга с полями. мы исследовали другие необязательные компоненты для алгоритма, но они не приводят к ускорению при наличии полей. эта статья организована следующим образом. в разделе. [ sec : ma ] мы вводим модель Изинга в шахматном порядке и описываем алгоритм. в разделе. [ sec : методы ] мы определяем величины, которые необходимо измерить, и как вычисляются ошибки. в разделе.  [ sec : результаты ] мы представляем результаты. статья заканчивается обсуждением. [ sec : disc ] гамильтониан для модели Изинга в шахматном порядке равен @xmath2 = - k\\sum_{\u003ci, j\u003e}\\sigma_{i}\\sigma_{j} -\\sum_{i}h_{i}\\sigma_{i}\\ ] ] где переменные спина, @xmath3 примите значения @xmath4. @xmath5 - сила связи, а @xmath6 - магнитное поле в точке @xmath7. суммирование в первом члене уравнения. ( [ eq : h ] ) вычисляется по ближайшим соседям на квадратной решетке @xmath8 с периодическими граничными условиями и четным @xmath9. второе суммирование выполняется по участкам решетки. поле в шахматном порядке получается путем установки @xmath10, если @xmath7 находится в четной подрешетке, и @xmath11, если @xmath7 находится в нечетной подрешетке. расположенное в шахматном порядке поле нарушает симметрию вверх- вниз (@xmath12) модели изинга нулевого поля, однако две симметрии остаются. гамильтониан инвариантен при четных перемещениях: @xmath13 с @xmath14 для любого вектора в четной подрешетке. гамильтониан также инвариантен при нечетных перемещениях вместе с глобальным переворотом: @xmath15 с @xmath16 для любого вектора в нечетной подрешетке. на рисунке [ рис. : фаза ] показана линия критических точек, @xmath17 для этой модели. мы провели моделирование в трех точках критической линии, взятых из высокоточных результатов ref., @xmath18 @xmath19 @xmath20 основная идея кластерного алгоритма с двумя репликами заключается в одновременном моделировании двух независимых систем ising, @xmath21 и @xmath22, на одной решетке и в одном и том же пространстве. поле. кластеры пар спинов в этой системе с двумя репликами идентифицируются и переворачиваются. для построения кластеров вводятся вспомогательные переменные связи. переменные связи \\{@xmath23 } определены для каждой связи @xmath24 и принимают значения 0 и 1. мы говорим, что @xmath25 является _ занятым _, если @xmath26. связь @xmath25 _ удовлетворена _, если @xmath27 и @xmath28. могут быть заняты только удовлетворенные связи. алгоритм с двумя репликами имитирует совместное распределение типа edwards - sokal @xcite для \\{@xmath29 } и \\{@xmath30 }, а также \\{@xmath23}. статистический вес @xmath31 $ ] для совместного распределения равен @xmath32=e^{-g[\\sigma,\\tau ] } \\delta[\\sigma, \\tau, \\eta ] b_p[\\eta]\\ ] ] где @xmath33 @xmath34 - стандартный коэффициент Бернулли, @xmath35 = p ^{|\\eta| } ( 1-p)^{n_b-|\\eta|}\\ ] ] @xmath36 = # @xmath37 - количество занятых связей, а @xmath38 - общее количество связей решетки. коэффициент @xmath39 применяет правило, согласно которому заняты только удовлетворенные связи: если для каждой связи @xmath24 такой, что @xmath40 вращения совпадают в обеих репликах ( @xmath41 и @xmath42 ), то @xmath43=1 $ ]; в противном случае @xmath43=0 $ ]. несложно показать, что интегрирование @xmath31 $ ] по переменным связи, @xmath44 выдает статистический вес для двух независимых моделей ising в одном и том же поле, @xmath45-\\beta\\mathcal{h}[\\tau ] } = const\\sum_{\\{\\eta\\}}x[\\sigma, \\tau, \\eta]\\ ] ] если идентификация произведена, то @xmath46. идея кластерного алгоритма с двумя репликами заключается в выполнении перемещений по переменным спина и связи, которые удовлетворяют детальному балансу и являются эргодичными по отношению к совместному распределению уравнения.([уравнение : x ] ). занятые связи @xmath44 определяют связанные кластеры сайтов. мы называем сайт @xmath7 _ активным сайтом _, если @xmath47 и кластеры состоят либо полностью из активных, либо неактивных сайтов. если кластер активных сайтов перевернуть таким образом, чтобы @xmath48 и @xmath49 совпадали, коэффициент @xmath50 остается неизменным. однократная проверка алгоритма trc методом монте-карло состоит из следующих трех шагов: 1. заполните удовлетворенную связь, соединяющую активные сайты с вероятностью @xmath46. определите кластеры активных сайтов, соединенных занятой связью (включая одиночные активные сайты). для каждого кластера @xmath51 случайным образом и независимо назначьте значение вращения @xmath52. если сайт @xmath7 находится в кластере @xmath51, то новыми значениями вращения будут @xmath53 и @xmath54. таким образом, обновляются все активные сайты. 2. обновите каждую реплику отдельно с помощью алгоритма metropolis. 3. преобразуйте реплику @xmath22 на случайную величину относительно реплики @xmath21. если перевод выполняется по нечетному вектору, все вращения @xmath22 переворачиваются. шаг 1 аналогичен развертке алгоритма sw, за исключением того, что кластеры выращиваются в системе с двумя репликами, а не в одной реплике, и переворачиваются только активные кластеры. обратите также внимание, что вероятность заполнения связи равна @xmath46 для алгоритма и @xmath55 для алгоритма sw. несложно показать, что шаг 1 алгоритма удовлетворяет детальному балансу относительно уравнения совместного распределения. ( [ уравнение : x ] ). поскольку на шаге 1 алгоритма участвуют только активные сайты, для обеспечения эргодичности требуется проверка метрополии, шаг 2. шаг 3 содержит необязательные компоненты алгоритма: четный перевод или нечетный перевод плюс переворот одной реплики относительно другой. эти перемещения оправданы симметриями модели Изинга в шахматном порядке, указанными в уравнениях. ( [ eq : четный ] ) и ( [ eq : нечетный ] ). когда мы ссылаемся на алгоритм без дальнейших уточнений, мы имеем в виду алгоритм, описанный шагами 1-3 выше. выше мы также изучаем только с четными переводами или только с нечетными переводами.    в алгоритме мы переворачиваем только активные кластеры, но также возможно переворачивать неактивные кластеры, если используется весовой коэффициент, связанный с изменением в @xmath50. мы называем переключение активного кластера на активный кластер (@xmath56 на @xmath57 или @xmath57 на @xmath56 ) активным переключением. алгоритм _ с неактивными переворотами _ получается путем замены шага 1 следующим: 1. занимайте удовлетворенные связи с вероятностью @xmath46. идентифицируйте кластеры, соединенные занятыми связями (включая отдельные сайты). для каждого кластера @xmath51, взятого по одному за раз, случайным образом предложите два новых значения вращения, @xmath52 и @xmath58 для вращений @xmath21 и @xmath22 соответственно. вычислите @xmath59, изменение в @xmath50, которое произойдет, если вращения в кластере @xmath60 будут изменены на предложенные значения, оставляя вращения в других кластерах фиксированными. если @xmath61 принимает предложенные значения вращения ( установите @xmath62 и @xmath63 для всех узлов @xmath7 в кластере @xmath51), в противном случае, если @xmath64 принимает предложенные значения вращения с вероятностью @xmath65. шаг 1@xmath66 сам по себе эргодичен, однако может оказаться полезным добавить метрополисные развертки и переводы. мы измерили три наблюдаемых параметра, используя алгоритм: абсолютное значение намагниченности одной копии, _ m _; энергию одной копии, @xmath67; и абсолютное значение суммарной ступенчатой намагниченности для обеих копий, _ s _, где определение _ s _ равно @xmath68 обратите внимание, что ступенчатая намагниченность сохраняется всеми компонентами алгоритма, за исключением метрополисных разверток и неактивных переворотов. для каждой из этих наблюдаемых величин мы вычислили ожидаемые значения интегрального времени автокорреляции @xmath69 и экспоненциального времени автокорреляции @xmath70. из @xmath69 мы оценили динамический показатель @xmath1.    автокорреляционная функция для @xmath71, @xmath72 задается через, @xmath73 интегралустановленное время автокорреляции для наблюдаемого @xmath71 определяется @xmath74, а экспоненциальное время автокорреляции для наблюдаемого @xmath71 определяется @xcite @xmath75 на практике пределы в уравнениях. ( [ eq : auto - func ] ), ( [ eq : in - auto1 ] ) и ( [ eq : ex - auto ] ) должны вычисляться при конечных значениях. продолжительность прогонов по методу Монте-карло определяется @xmath76 и обсуждается ниже. следуя ссылке, мы определяем @xmath77 и выбираем отсечку @xmath78 как наименьшее целое число, такое что @xmath79, где @xmath80 = 6. мы использовали метод наименьших квадратов, чтобы подогнать @xmath81 как функцию @xmath82, чтобы получить отношение @xmath83, и выбрали отсечку в @xmath84. мы использовали метод блокировки @xcite для оценки ошибок. вся выборка измерений @xmath85 mc была разделена на @xmath86 блоков равной длины @xmath87. для каждого блока @xmath7 и каждой измеренной величины @xmath88 мы вычислили среднее значение @xmath89. наши оценки @xmath90 и его ошибки @xmath91 получены из: @xmath92 @xmath93 в наших симуляциях мы разделили всю выборку на блоки @xmath86, где @xmath86 находится в диапазоне от 10 до 30.    для данных, собранных с использованием алгоритма, каждый блок имеет длину @xmath94. для данных, собранных с использованием модификаций алгоритма, каждый блок имеет длину @xmath95. данные были собраны для @xmath96, 2 и 4 и для размера @xmath9 в диапазоне от 16 до 256. таблица [ tab : m&s&e ] дает интегрированное время автокорреляции с использованием алгоритма для намагниченности, энергии и ступенчатого намагничивания. таблица [ tab : m&s&e ] сопоставима с таблицей в ссылке. но приведенные цифры систематически больше, особенно при больших размерах системы. это расхождение может быть связано со скользящей отсечкой @xmath78, используемой здесь, вместо фиксированной отсечки на 200, используемой в ссылке.  . в таблице [ tab : нечетное и четное ] приведены интегрированные времена автокорреляции для намагничивания с использованием только четных или только нечетных сдвигов. сравнение алгоритма только с четными переводами и только с нечетными переводами в таблицах [ tab : нечетные и четные ] показывает, что нечетные переводы вместе с глобальными переворотами одной реплики относительно другой необходимы для достижения малого и медленно растущего времени автокорреляции при наличии поля в шахматном порядке. таблица [ вкладка : сравнение ] показывает времена автокорреляции намагниченности с использованием различных алгоритмов для размера системы @xmath97. алгоритм Свендсена - Вана (sw) имеет наименьший @xmath98 при отсутствии полей. однако, когда поля присутствуют, и алгоритм sw затем модифицируется в соответствии с методом ref. производительность даже хуже, чем у алгоритма metropolis. медленное уравновешивание алгоритма sw при наличии поля в шахматном порядке обусловлено малыми вероятностями принятия для переключения больших кластеров. с другой стороны, наличие полей в шахматном порядке существенно не изменяет производительность алгоритма с двумя репликами, пока присутствуют нечетные переводы. неактивные перевороты полезны, когда нет поля в шахматном порядке, но когда поле в шахматном порядке включено, время автокорреляции существенно не увеличивается за счет неактивных переворотов. объяснение неэффективности неактивных переворотов при наличии поля в шахматном порядке заключается в том, что вероятность принятия неактивного переворота мала. например, эта вероятность равна @xmath99 для @xmath97 и @xmath100. процессорное время на одно вращение на компьютере pentium iii с частотой 450 МГц также было измерено для различных алгоритмов и приведено в таблице [ tab : compare ] для @xmath97. рассмотрев диапазон размеров системы, мы обнаружили, что процессорное время для одной развертки алгоритма mc увеличивается почти линейно с увеличением количества вращений. алгоритм в 3 раза медленнее алгоритма metropolis, но эта разница более чем компенсируется размером системы @xmath101 за счет гораздо более быстрого уравновешивания алгоритма. даже без нечетных переводов алгоритм превосходит metropolis по размеру 80. было обнаружено, что отношение интегрированного времени автокорреляции к экспоненциальному практически не зависит от размера системы в диапазоне от @xmath102 до @xmath103. мы обнаружили, что в этом диапазоне размеров @xmath104 варьировался от @xmath105 до @xmath106 для @xmath96; от @xmath107 до @xmath108 для @xmath109; и от @xmath110 до @xmath1111 для @xmath100. соотношение @xmath112 также почти не зависит от @xmath9 и @xmath113 и составляет около 0,45. соотношение @xmath114 почти не зависит от @xmath9, но медленно уменьшается с @xmath113 в диапазоне от 0,29 до 0,25, поскольку @xmath113 колеблется от 0 до 4. почти постоянное значение @xmath115 для разных размеров предполагает, что соотношение @xmath115 интегрированное и экспоненциальное время автокорреляции определяются одним и тем же динамическим критическим показателем.      рисунки [рис. : m - bilog ] и [ рис. : m - log ] показывают интегрированное время автокорреляции намагниченности для графиков в логарифмическом и логарифмически-линейном масштабе соответственно. рисунки [рис. : e - bilog ] и [ рис. : e - log ] показывают интегрированное по энергии время автокорреляции для графиков в логарифмическом и логарифмически-линейном масштабе соответственно. рисунки [рис. : s - bilog ] и [ рис. : s - log ] показывают интегрированное время автокорреляции ступенчатой намагниченности для графиков в логарифмическом и логарифмически-линейном масштабе соответственно.    для всего диапазона @xmath9 логарифмический рост, по-видимому, дает несколько лучшее соответствие, чем простой степенной закон, особенно для намагниченности. таким образом, наши результаты согласуются с @xmath116 для алгоритма. в предположении, что динамический показатель не равен нулю, мы также выполнили взвешенные подгонки методом наименьших квадратов к форме @xmath117 и варьировали @xmath118, минимальный размер системы, включенный в подгонку. рисунки [ рис. : m - z ], [ рис. : e - z ] и [ рис. : s - z ] показывают динамический показатель @xmath1 для намагниченности, энергии и ступенчатой намагниченности, соответственно, как функцию @xmath118 с использованием алгоритма. на рисунках [ рис. : четный - z ] и [ рис. : нечетный - z ] показан динамический показатель как функция @xmath118 для намагниченности для только с четными перемещениями и только с нечетными перемещениями соответственно. во всех случаях, кроме @xmath119, динамический показатель является убывающей функцией от @xmath118. для намагниченности @xmath120, по-видимому, экстраполируется на значение между 0,1 и 0,2, как @xmath121, в то время как для энергии и ступенчатой намагниченности динамический показатель, по-видимому, экстраполируется на значение между 0,3 и 0,4. малое значение динамического показателя требует, чтобы в алгоритм были включены нечетные перемещения и перевороты. из рис. [ рис. : четный - z ] ясно, что динамический показатель близок к 2 для алгоритма только с четными переводами.    таблица [ tab : dyn - exp ] дает результаты взвешенных подборов методом наименьших квадратов для @xmath1 для наименьших значений @xmath118, для которых существует разумный уровень достоверности. поскольку на логарифмических графиках наблюдается общая кривизна вниз, эти цифры, вероятно, являются завышенными по сравнению с асимптотическими значениями. таким образом, мы можем заключить, что асимптотический динамический показатель для алгоритма, вероятно, будет меньше @xmath122 и, возможно, точно равен нулю. динамический показатель, по-видимому, не зависит от напряженности поля в шахматном порядке. для случая алгоритма sw, примененного к двумерному изингу без ступенчатого поля, наилучшей оценкой является @xmath123@xcite, но результаты также согласуются с логарифмическим ростом времени релаксации. числа для динамического показателя для sw, по-видимому, меньше, чем для алгоритма, но эта разница может просто отражать большие поправки к масштабированию в случае. мы изучили динамику кластерного алгоритма с двумя репликами, примененного к двумерной модели Изинга в шахматном порядке. мы обнаружили, что динамический показатель алгоритма либо очень мал (@xmath124 ), либо равен нулю ( @xmath125) и что динамический показатель не зависит от силы шахматного поля. точное значение @xmath1 не удалось определить из-за больших поправок к масштабированию. мы протестировали важность различных необязательных компонентов алгоритма и обнаружили, что нечетное перемещение и глобальный переворот одной реплики относительно другой необходимы для достижения быстрого равновесия. без этого компонента @xmath1 близок к 2, так что качественного улучшения по сравнению с алгоритмом metropolis нет. нечетное перемещение и глобальное переключение одной реплики относительно другой допускает значительное изменение общей намагниченности системы с допустимой долей @xmath126. большие изменения глобальной намагниченности также могут происходить в алгоритме Свендсена - Вана в полевых условиях или с помощью неактивных переключений в алгоритме, но эти изменения не влияют на общую намагниченность. перевороты имеют небольшую приемлемую долю из-за шахматного расположения поля. к сожалению, нечетный перевод и переворот разрешены из-за особой симметрии модели Изинга в шахматном порядке. для более общих систем Изинга с трансляционно-инвариантными полями мы ожидаем производительность, аналогичную только с четными переводами. в этом случае время автокорреляции значительно меньше, чем для алгоритма metropolis, но динамический показатель примерно такой же. хотя подход с двумя репликами полезен для решения этих более общих проблем, связанных с использованием систем с полями, он не представляет собой метод, который преодолевает критическое замедление, за исключением случаев, когда присутствуют дополнительные симметрии, которые позволяют переворачивать одну реплику относительно другой. разработка общих методов эффективного моделирования критических спиновых систем с полями остается открытой проблемой.. интегрированные времена автокорреляции для алгоритма намагничивания одной реплики @xmath127, суммарная ступенчатая намагниченность обеих реплик @xmath128 и энергия одной реплики @xmath129. 

изучено динамическое критическое поведение кластерного алгоритма с двумя репликами. несколько версий алгоритма применены к двумерной модели изинга с квадратной решеткой с расположенным в шахматном порядке полем. динамический показатель для полного алгоритма оказался меньше 0,4. обнаружено, что нечетные перемещения одной реплики относительно другой вместе с глобальными переворотами необходимы для получения небольшого значения динамического показателя.