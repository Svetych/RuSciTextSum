уравнения движения Гамильтона представляют собой систему обычных дифференциальных уравнений первого порядка, @xmath3, где @xmath4 обозначает дифференцирование по времени, @xmath5 и @xmath6. их можно рассматривать как характеристические уравнения уравнения в частных производных @xmath7 с @xmath8 дифференциальным оператором первого порядка @xmath9, генерирующим поток в фазовом пространстве. если @xmath10 явно не зависит от @xmath5, формальным решением ( [ hamiltonianflow ] ) является @xmath11 в большинстве случаев это выражение остается просто формальным, но часто можно разделить гамильтониан на две части, @xmath12, с соответствующим разделением @xmath13 таким образом, что потоки, генерируемые @xmath14 и @xmath15 по отдельности являются интегрируемыми. затем можно использовать формулу Кэмбелла - Бейкера - Хаусдорфа для аппроксимации потока, генерируемого @xmath8. получается формула расщепления strang @xcite @xmath16\\right]+\\cdots},\\ ] ], которая показывает, что пошаговое выполнение этого выражения с шагом по времени @xmath1 обеспечивает аппроксимацию с относительной точностью порядка @xmath0, точно сохраняя симплектическое свойство потока. это соответствует симплектической схеме разбиения итерации процесса решения @xmath17 здесь последняя часть одной итерации может быть объединена с первой частью следующей, если только вы не имеете дело с системами, зависящими от времени, или не хотите регистрировать состояние системы в промежуточные моменты времени.    с практической точки зрения наиболее интересным свойством этой формулировки является то, что ее можно интерпретировать непосредственно в терминах физических процессов. например, для гамильтонианов @xmath18 стандартной схемой разделения является выбор @xmath19 и @xmath20. в этом случае ( [ symplecticsplitting ] ) соответствует набору свободно движущихся частиц, получающих удары через регулярные промежутки времени @xmath1, причем эти удары зависят от положений @xmath21 частиц. т.е. мы можем думать об эволюции как о наборе _ ударов _ и _ перемещений _ @заходите. неясно, является ли это лучшим способом приблизить или смоделировать точную динамику реальной системы. например, почему движение между ударами должно быть бесплатной потоковой передачей, сгенерированной @xmath22? существует больше способов разделить гамильтониан на две интегрируемые части @ xcite; наилучшее разделение, скорее всего, то, которое наилучшим образом имитирует физику уравнения ( [ hamiltonequation ] ). далее, поскольку это уравнение не решается точно с помощью ( [ symplecticsplitting ] ) для любого конечного значения @xmath1, нам нужно необязательно выбирать @xmath23 равным _ точно _ @xmath24, если оно приближается к этому значению достаточно быстро, как @xmath25. мы будем использовать это наблюдение для систематического повышения точности схемы расщепления ( [ symplecticsplitting ] ). мы, конечно, не первые, кто пытается улучшить схему расщепления Стрмера - Верле. доступный обзор нескольких более ранних подходов можно найти в ссылке @xcite. neri @xcite предоставил общую идею построения симплектических интеграторов для гамильтоновых систем. форест и Рут @ xcite обсудили явный метод четвертого порядка интегрирования гамильтоновых уравнений для простейшего нетривиального случая. йошида @ xcite разработал симплектический интегратор для любого четного порядка, а Сузуки @ xcite представил идею о том, как рекурсивное построение последовательных приближений может быть распространено на другие методы. для простой иллюстрации нашей идеи рассмотрим гамильтониан @xmath26, точная эволюция которого за интервал времени @xmath1 равна @xmath27 p ^{\\text{e } } \\end{pmatrix } = \\begin{pmatrix*}[r ] \\cos \\tau & \\sin \\tau \\\\ - \\sin \\tau & \\cos\\tau \\end{pmatrix * } \\begin{pmatrix } q\\\\p\\end{pmatrix}. \\label{h_0a}\\ ] ] сравните это со схемой разделения _ kick - move - kick_ за тот же промежуток времени, с @xmath28 и @xmath29, где @xmath30 и @xmath31 могут зависеть от @xmath1. одна полная итерация дает @xmath32 1-\\frac{1}{2}m k\\tau ^ 2 & m \\tau \\\\[0.4ex ] -(1-\\frac{1}{4 } км \\tau ^ 2 ) k\\tau & 1-\\frac{1}{2 } k m\\tau^ 2 \\end{pmatrix * } \\begin{pmatrix}q \\\\ p \\end{pmatrix}.\\ ] ] мы отмечаем, что, выбрав @xmath33 \\label{harmonicoscillator correction}\\\\[-1ex ] k & = \\frac{2}{\\tau } \\tan \\frac{\\tau}{2 } = 1+\\frac{1}{12}\\tau^2+\\frac{1}{120}\\tau^4 + \\frac{17}{20160}\\tau^6 + \\cdots,\\nonumber\\end{выровнено}\\ ] ] воспроизводится точная эволюция. если мы вместо этого выберем схему разделения _ move - kick - move _ с @xmath34 и @xmath35, одна итерация даст @xmath36 p ^{\\text{s}}\\end{pmatrix } = \\begin{pmatrix*}[c ] 1-\\frac{1}{2}\\bar{m } \\bar{k}\\tau^2 & ( 1-\\frac{1}{4}\\bar{m}\\bar{k})\\bar{m } \\tau \\\\[0.5ex ] -\\bar{k}\\tau & 1-\\frac{1}{2 } \\bar{k}\\bar{m}\\tau^ 2 \\end{pmatrix * } \\begin{pmatrix}q \\\\ p \\end{pmatrix},\\ ] ] который становится точным, если мы выберем @xmath37, это должно быть ясно что эта идея работает для систем гармонических осцилляторов в целом, т.е. для квадратичных гамильтонианов вида @xmath38, где @xmath39 и @xmath40 - симметричные матрицы. для выбранной схемы разбиения и интервала шага @xmath1 всегда существуют модифицированные матрицы @xmath41 и @xmath42, которые воспроизводят точную временную эволюцию. для систем, где @xmath39 и @xmath40 слишком велики для точной диагонализации, но разрежены, систематическое расширение @xmath43 и @xmath44 в степени @xmath0 могло бы быть эффективным способом улучшения стандартных схем разделения. для более общего рассмотрения мы рассмотрим гамильтонианы вида @xmath45 последовательное решение уравнений Гамильтона в степенях @xmath1 равно @xmath46 здесь мы ввели обозначения для сокращения выражений, @xmath47 \\\\ [-1.5ex ] & d \\equiv p_a \\partial ^ a,\\quad \\bar{d } \\equiv ( \\partial_a v)\\partial^a,\\nonumber\\end{выровнено}\\ ] ] где мы используем _ соглашение о суммировании Эйнштейна _: индекс, который встречается дважды, один раз в нижнем положении и один раз в верхнем положении, неявно суммируется по всем доступным значениям. i.e, @xmath48 (обычно мы будем использовать матрицу @xmath39 для увеличения индекса с нижней позиции на верхнюю ). соответствующим результатом для схемы разделения _ kick - move - kick _ является @xmath49, как и ожидалось, он отличается от точного результата в третьем порядке, но разницу можно исправить, введя генераторы второго порядка @xmath50, которые будут использоваться соответственно на шагах _ move _ и _ kick _. специализированный для одномерная система с потенциалом @xmath51 это согласуется с уравнением ( [ harmonicoscillatorкоррекция ] ). с этой поправкой схема разделения _ kick - move - kick _ согласуется с точным решением для порядка @xmath52 в @xmath1, но отличается в терминах @xmath53. мы можем исправить разницу, введя генераторы четвертого порядка, @xmath54 \\\\[-1ex ] v_4 & = \\frac{1}{480 } \\bar{d}^2 v\\tau ^4.\\nonumber\\end{выровнено}\\ ] ] специализированные для одномерной системы с потенциалом @xmath51 это согласуется с уравнением ( [ harmonicoscillatorкоррекция ] ). с этой поправкой схема разделения _ kick - move - kick _ согласуется с точным решением порядка @xmath55 в @xmath1, но отличается в терминах @xmath56. мы можем исправить разницу, введя генераторы шестого порядка, @xmath57 \\\\[-1ex ] v_6 & = \\frac{1}{161280}\\left ( 17\\, \\bar{d}^3 - 10\\,\\bar{d}_3\\right)v\\tau^6,\\nonumber\\end{выровнено}\\ ] ] где мы ввели @xmath58, специализированный для одномерной системы с потенциалом @xmath51, это согласуется с уравнением ( [ коррекция гармонического колебания ] ). с этой поправкой схема разделения _ kick - move - kick _ согласуется с точным решением @xmath59 упорядочены в @xmath1, но отличаются в @xmath60-терминах. можно продолжить процесс исправления, но это, вероятно, уже выходит далеко за пределы практического использования. добавление дополнительных потенциальных терминов @xmath61 в принципе не создает проблем для решения шагов _ kick_. уравнения @xmath62 все еще могут быть точно интегрированы, сохраняя симплектическую структуру. ситуация отличается для кинектического термина @xmath63, поскольку теперь он приводит к уравнениям @xmath64, которые больше не просто точно интегрировать. хотя проблемные термины невелики, следует убедиться, что шаги _ move _ точно сохраняют симплектическую структуру. пусть @xmath65 обозначает позиции и импульсы непосредственно перед шагом _ move _, а @xmath66 - позиции и импульсы сразу после. мы создаем генерирующую функцию @xcite @xmath67, с помощью @xmath68 это сохраняет симплектическую структуру; нам просто нужно построить @xmath69, чтобы достаточно точно представить шаг _ move _. рассмотрим сначала случай без корректирующих условий. выбор @xmath70 дает @xmath71, что является правильным соотношением. теперь добавьте @xmath72-term к шагу _ move _. для заказа @xmath73 точное решение уравнения ( [ movesteps ] ) становится @xmath74 \\label{exactmove } \\\\[-1.5ex ] p_a & = p_a + \\frac{1}{12 } \\partial_a \\, d^ 2 v\\,\\tau^ 3 + \\frac{1}{24}\\partial_a d^3 v\\,\\tau^4.\\nonumber\\end{выровнено}\\ ] ] сравните это с результатом изменения @xmath75, где @xmath76. решение уравнения ( [ canonicaltransformation ] ) изменяется с соотношений ( [ simplekick ] ) на @xmath77 поскольку @xmath78 является линейным в @xmath79, уравнение ( [ pequation ] ) представляет собой систему алгебраических уравнений третьего порядка, которая, как правило, должна быть решена численно. обычно это должен быть быстрый процесс для небольших @xmath1. точное решение этого уравнения требуется для сохранения симплектической структуры, но это решение также должно совпадать с точным решением ( [ movesteps ] ) для порядка @xmath73. это может быть проверено с помощью разложения возмущений в @xmath1. пертурбативным решением уравнения ( [ pequation ] ) является @xmath80, которое, вставленное в ( [ qequation ] ), воспроизводит полное решение ( [ exactmove ] ) в порядке @xmath73. этот процесс может быть систематически продолжен до более высоких порядков. мы записываем функцию преобразования как @xmath81 и находим, что первые члены в разложении равны @xmath82. Остается продемонстрировать, что наши алгоритмы могут быть применены к rдругие примеры. мы рассмотрели гамильтониан @xmath83 с начальным условием @xmath84, @xmath85. точное движение представляет собой нелинейное колебание с постоянной @xmath10, равной @xmath86, и периодом @xmath87, здесь @xmath88 - бета-функция. на рисунке [ энергосбережение ] мы показываем поведение @xmath89 во время последней половины колебания @xmath90 для различных значений @xmath1 и скорректированных генераторов вплоть до порядка @xmath91 (соответствующего @xmath92 ). мы показали, что можно систематически повышать точность обычных схем симплектического интегрирования для довольно общего класса уравнений Гамильтона. процесс довольно прост для линейных уравнений, где он может быть полезен для разреженных систем. для систем общего назначения метод требует решения набора нелинейных алгебраических уравнений на каждом шаге перемещения. в какой степени метод более высокого порядка является предпочтительным или нет, будет зависеть от анализируемой системы и требуемой точности. как всегда при использовании методов более высокого порядка, повышению точности на шаг может противостоять более высокая вычислительная стоимость на шаг @xcite. 

мы показываем, как стандартный метод расщепления (strmer - verlet) для дифференциальных уравнений гамильтоновой механики (с точностью порядка @xmath0 для временного шага длины @xmath1) может быть улучшен систематическим образом без использования метода композиции. мы приводим явные выражения, которые повышают точность до порядка @xmath2, и демонстрируем, что метод работает на простом ангармоническом генераторе. метод расщепления, уравнения Гамильтона, точность более высокого порядка, симплектичность